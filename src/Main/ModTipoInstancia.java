package Main;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author FLIA HUDSON
 */
public class ModTipoInstancia extends javax.swing.JFrame {
    ControladorABMTipoInstancia controladorABMTI;
    int parCodTipoInstancia;
    DTOTipoInstancia dtomod = new DTOTipoInstancia();
    List<DTOTipoTarea> listatipostarea;
    List<DTOTipoTarea> listaTiposTareaParaAlta;
    List<DTOSector> listasectores;
    javax.swing.table.DefaultTableModel miTablaDisponibles=new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "C칩digo TT","Nombre Tipo Tarea"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
    javax.swing.table.DefaultTableModel miTablaElegidas=new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "C칩digo TT","Nombre Tipo Tarea"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
    /*NO SIRVEN
    DefaultListModel milista = new DefaultListModel();
    DefaultListModel milista2 = new DefaultListModel();
    */  
    public ModTipoInstancia() {
        initComponents();
    }
    public void setVisible(boolean b) {
        
        listasectores = controladorABMTI.buscarSectoresVigentes();
        for (int i=0;i<listasectores.size();i++)
        {
            DTOSector unSector = listasectores.get(i);
            sectoresComboBox.addItem(unSector);
        }
        listatipostarea = controladorABMTI.buscarTiposTareaVigentes();
        for (int i=0;i<listatipostarea.size();i++)
        {
            DTOTipoTarea unTipoTarea = listatipostarea.get(i);
            miTablaDisponibles.addRow(new Object[]{unTipoTarea.getCodTipoTarea(),unTipoTarea.getNombreTipoTarea()});
            TiposTareaVigentesTable.setModel(miTablaDisponibles);
        }
        super.setVisible(b);
    }
    public void inicializaModificar(ControladorABMTipoInstancia cont, int cod){
       controladorABMTI=cont;
       parCodTipoInstancia=cod;
       List<DTOTipoInstancia> listadto = controladorABMTI.buscarTipoInstancias(parCodTipoInstancia);
       codModTipoInstanciaTextField.setText((Integer.toString(listadto.get(0).getCodTipoInstancia())));
       nomActualTipoInstanciaTextField.setText(listadto.get(0).getNombreTipoInstancia());
       nomModTipoInstanciaTextField.setText(nomActualTipoInstanciaTextField.getText());
       nomActualSectorTipoInstanciaTextField.setText(listadto.get(0).getDTOSector().getNombreSector());
       listaTiposTareaParaAlta = listadto.get(0).getListaDTOTipoTarea();
       for (int i=0;i<listaTiposTareaParaAlta.size();i++)
        {
            DTOTipoTarea unTipoTarea = listaTiposTareaParaAlta.get(i);
            miTablaElegidas.addRow(new Object[]{unTipoTarea.getCodTipoTarea(),unTipoTarea.getNombreTipoTarea()});
            TiposTareaElegidasTable.setModel(miTablaElegidas);
        }
   }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nomModTipoInstanciaTextField = new javax.swing.JTextField();
        codModTipoInstanciaTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        sectoresComboBox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TiposTareaVigentesTable = new javax.swing.JTable();
        agregarTareaButton = new javax.swing.JButton();
        removerTareaButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        TiposTareaElegidasTable = new javax.swing.JTable();
        modTipoInstanciaButton = new javax.swing.JButton();
        cancelarButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        nomActualTipoInstanciaTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        nomActualSectorTipoInstanciaTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Modificar Tipo Instancia");

        jLabel1.setText("C칩digo Tipo Instancia:");

        jLabel2.setText("Nuevo Nombre Tipo Instancia:");

        nomModTipoInstanciaTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomModTipoInstanciaTextFieldActionPerformed(evt);
            }
        });

        codModTipoInstanciaTextField.setEditable(false);
        codModTipoInstanciaTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codModTipoInstanciaTextFieldActionPerformed(evt);
            }
        });

        jLabel3.setText("Nuevo Sector Tipo Instancia:");

        sectoresComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sectoresComboBoxActionPerformed(evt);
            }
        });

        jLabel4.setText("Elija los Tipos de Tarea vigentes que pertenecer치n al Tipo Instancia");

        TiposTareaVigentesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Codigo TT", "Nombre Tipo Tarea"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TiposTareaVigentesTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        TiposTareaVigentesTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(TiposTareaVigentesTable);

        agregarTareaButton.setText("-->");
        agregarTareaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarTareaButtonActionPerformed(evt);
            }
        });

        removerTareaButton.setText("<--");
        removerTareaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerTareaButtonActionPerformed(evt);
            }
        });

        TiposTareaElegidasTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Codigo TT", "Nombre Tipo Tarea"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TiposTareaElegidasTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        TiposTareaElegidasTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(TiposTareaElegidasTable);

        modTipoInstanciaButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        modTipoInstanciaButton.setText("Modificar Tipo Instancia");
        modTipoInstanciaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modTipoInstanciaButtonActionPerformed(evt);
            }
        });

        cancelarButton.setText("Volver");
        cancelarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Nombre actual Tipo Instancia:");

        nomActualTipoInstanciaTextField.setEditable(false);
        nomActualTipoInstanciaTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomActualTipoInstanciaTextFieldActionPerformed(evt);
            }
        });

        jLabel6.setText("Nombre actual Sector:");

        nomActualSectorTipoInstanciaTextField.setEditable(false);
        nomActualSectorTipoInstanciaTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomActualSectorTipoInstanciaTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sectoresComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(modTipoInstanciaButton)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(agregarTareaButton, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                                            .addComponent(removerTareaButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(cancelarButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nomModTipoInstanciaTextField)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(nomActualTipoInstanciaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(codModTipoInstanciaTextField))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nomActualSectorTipoInstanciaTextField)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(codModTipoInstanciaTextField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomActualTipoInstanciaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nomModTipoInstanciaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(nomActualSectorTipoInstanciaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sectoresComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(agregarTareaButton)
                        .addGap(18, 18, 18)
                        .addComponent(removerTareaButton))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modTipoInstanciaButton)
                    .addComponent(cancelarButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nomModTipoInstanciaTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomModTipoInstanciaTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomModTipoInstanciaTextFieldActionPerformed

    private void codModTipoInstanciaTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codModTipoInstanciaTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codModTipoInstanciaTextFieldActionPerformed

    private void sectoresComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sectoresComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sectoresComboBoxActionPerformed

    private void agregarTareaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarTareaButtonActionPerformed
        int a;
        try {
            a= (Integer) TiposTareaVigentesTable.getModel().getValueAt(TiposTareaVigentesTable.getSelectedRow(), 0);
        }
        catch (Exception e){
            JOptionPane.showMessageDialog(this, "Seleccione un Tipo de Tarea para asignar", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        for (int i=0;i<listatipostarea.size();i++)
        {
            DTOTipoTarea unTipoTarea = listatipostarea.get(i);
            if (a==unTipoTarea.getCodTipoTarea())
            {
                miTablaElegidas.addRow(new Object[]{unTipoTarea.getCodTipoTarea(),unTipoTarea.getNombreTipoTarea()});
                TiposTareaElegidasTable.setModel(miTablaElegidas);
                listaTiposTareaParaAlta.add(unTipoTarea);
            return;
            }
        }
    }//GEN-LAST:event_agregarTareaButtonActionPerformed

    private void removerTareaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerTareaButtonActionPerformed
        int a;
        try  {
            a= (Integer) TiposTareaElegidasTable.getModel().getValueAt(TiposTareaElegidasTable.getSelectedRow(), 0);
        }
        catch (Exception e){
            JOptionPane.showMessageDialog(this, "Seleccione un Tipo de Tarea asignada", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        miTablaElegidas.removeRow(TiposTareaElegidasTable.getSelectedRow());
        for (int i=0;i<listatipostarea.size();i++)
        {
            DTOTipoTarea unTipoTarea = listatipostarea.get(i);
            if (a==unTipoTarea.getCodTipoTarea())
            {
                TiposTareaElegidasTable.setModel(miTablaElegidas);
                listaTiposTareaParaAlta.remove(unTipoTarea);
            }
        }
        System.out.println("!");
    }//GEN-LAST:event_removerTareaButtonActionPerformed

    private void modTipoInstanciaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modTipoInstanciaButtonActionPerformed
        try  {
            dtomod.setCodTipoInstancia(Integer.parseInt(codModTipoInstanciaTextField.getText()));
        }
        catch (Exception e){
            JOptionPane.showMessageDialog(this, "Error al ingresar codSector. Por favor ingrese un n칰mero", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        dtomod.setNombreTipoInstancia(nomModTipoInstanciaTextField.getText());
        dtomod.setDTOSector((DTOSector)sectoresComboBox.getSelectedItem());
        dtomod.setListaTipoTarea(listaTiposTareaParaAlta);
        controladorABMTI.modificarTipoInstancia(dtomod);
        setVisible(false);
        dispose();
    }//GEN-LAST:event_modTipoInstanciaButtonActionPerformed

    private void cancelarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarButtonActionPerformed
        setVisible(false);
        dispose();
    }//GEN-LAST:event_cancelarButtonActionPerformed

    private void nomActualTipoInstanciaTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomActualTipoInstanciaTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomActualTipoInstanciaTextFieldActionPerformed

    private void nomActualSectorTipoInstanciaTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomActualSectorTipoInstanciaTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomActualSectorTipoInstanciaTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModTipoInstancia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModTipoInstancia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModTipoInstancia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModTipoInstancia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModTipoInstancia().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TiposTareaElegidasTable;
    private javax.swing.JTable TiposTareaVigentesTable;
    private javax.swing.JButton agregarTareaButton;
    private javax.swing.JButton cancelarButton;
    private javax.swing.JTextField codModTipoInstanciaTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton modTipoInstanciaButton;
    private javax.swing.JTextField nomActualSectorTipoInstanciaTextField;
    private javax.swing.JTextField nomActualTipoInstanciaTextField;
    private javax.swing.JTextField nomModTipoInstanciaTextField;
    private javax.swing.JButton removerTareaButton;
    private javax.swing.JComboBox<DTOSector> sectoresComboBox;
    // End of variables declaration//GEN-END:variables
}
