package Main.ConfigurarCaso;

import Main.DTOConfiguracionTipoCaso;
import Main.DTOTipoCaso;
import Main.DTOTipoCasoTipoInstancia;
import Main.DTOTipoInstancia;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import javax.swing.JOptionPane;
import org.jdatepicker.DateModel;

/**
 *
 * @author FLIA HUDSON
 */
public class BajaConfigurar extends javax.swing.JFrame {
    ControladorConfigurar cont;
    SeleccionTipoCaso select;
    ABMConfigurar config;
    String parcodTC,parnroConfiguracion;
    Date fechainicioconfig;
    DTOConfiguracionTipoCaso configadarbaja;
    DTOTipoInstancia tibuscada;
    DTOConfiguracionTipoCaso configalta;
    List<DTOTipoInstancia> listaTIfiltrados;
    List<DTOTipoCasoTipoInstancia> listaTITC;
    javax.swing.table.DefaultTableModel miTabla=new javax.swing.table.DefaultTableModel(
        new Object [][] {

        },
        new String [] {
            "Orden","Código Tipo Instancia", "Nombre Tipo Instancia", "Minutos"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            false, false, false, false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    };
    /**
     * Creates new form AltaConfigurar
     */
    public BajaConfigurar() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void inicializaBaja (ControladorConfigurar cont,ABMConfigurar config, String codigoTC,String numeroconfig, SeleccionTipoCaso select) {
       this.cont = cont;
       this.config = config;
       this.select = select;
       parnroConfiguracion = numeroconfig; 
       parcodTC = codigoTC;
       configadarbaja = (DTOConfiguracionTipoCaso) cont.buscarConfiguracion(parcodTC,parnroConfiguracion);
       listaTITC = configadarbaja.getListaDTOTipoCasoTipoInstancia();
       listaTIfiltrados = new ArrayList<>();
    }
    public String arreglarDate (String date) {
        String dateoriginal = date; // formato YYYY-MM-dd
        dateoriginal = dateoriginal.replace("-","/"); //formato YYYY/MM/dd
        String dia = dateoriginal.substring(8, 10);
        String mes = dateoriginal.substring(4, 8);
        String año = dateoriginal.substring(0, 4);
        String datearreglada = (dia+mes+año); // formato dd/MM/YYYY
        return datearreglada;
    }
        
    
    public void setVisible(boolean b) {
        if (b==true) {
            DTOTipoCaso tcbuscado = (DTOTipoCaso) cont.buscarTipoCasosVigentes("", parcodTC).get(0);
            codTCTextField.setText(Integer.toString(tcbuscado.getCodTipoCaso()));
            nomTCTextField.setText(tcbuscado.getNombreTipoCaso());
            nroConfigTextField.setText(parnroConfiguracion);
         /* String fechainicial;
            fechainicial = configadarbaja.getFechaInicioVigencia().toString();
            fechainicial = arreglarDate(fechainicial); 
            jDatePicker1.getFormattedTextField().setText(fechainicial); */
            Calendar cal = Calendar.getInstance();
            cal.setTimeInMillis(configadarbaja.getFechaInicioVigencia().getTime());
            DateModel<Calendar> dateModel = (DateModel<Calendar>) jDatePicker1.getModel();
            dateModel.setValue(cal);
            if (listaTITC.size()>0){
            poblarTabla(listaTITC);
            }
            super.setVisible(b);
        }
    }
    public void poblarTabla(List<DTOTipoCasoTipoInstancia> listatitcs) {
        miTabla.setRowCount(0);
        List<DTOTipoCasoTipoInstancia> listatitcsordenadas = ordenaTITCs(listatitcs);
        for (int i=0;i<listatitcsordenadas.size();i++)
            {
                DTOTipoCasoTipoInstancia unaTITC = listatitcsordenadas.get(i);
                miTabla.addRow(new Object[]{unaTITC.getOrdenTipoCasoTipoInstancia(),unaTITC.getCodigoTipoInstancia(),unaTITC.getNombreTipoInstancia(),unaTITC.getMinutosMaximaResolucion()});
                TablaTITC.setModel(miTabla);
            }
    }
    private  List<DTOTipoCasoTipoInstancia> ordenaTITCs(List<DTOTipoCasoTipoInstancia> listatitcs)
    {
        List<DTOTipoCasoTipoInstancia> ordenado,aux;
        ordenado=new ArrayList<DTOTipoCasoTipoInstancia>();
        aux= new ArrayList<DTOTipoCasoTipoInstancia>();
        for (int i=0; i< listatitcs.size();i++)
        {
            aux.add(listatitcs.get(i));
        }
        for (int i=0; i< listatitcs.size();i++)
        {
            int ultCod=0;
            DTOTipoCasoTipoInstancia saux=null;
            for(int j=0;j<aux.size();j++)
            {
                if(ultCod ==0)
                {
                    ultCod=aux.get(j).getOrdenTipoCasoTipoInstancia();
                    saux=aux.get(j);
                }
                if (ultCod >aux.get(j).getOrdenTipoCasoTipoInstancia())
                {
                    ultCod=aux.get(j).getOrdenTipoCasoTipoInstancia();
                    saux=aux.get(j);
                }
            }
            ordenado.add(saux);
            aux.remove(saux);
        }
         return ordenado; 
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        nroConfigTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jDatePicker1 = new org.jdatepicker.JDatePicker();
        nomTCTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        codTCTextField = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaTITC = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        modificarTCTI = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Baja Configuración");

        jLabel1.setText("N° Configuración:");

        nroConfigTextField.setEditable(false);
        nroConfigTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nroConfigTextFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("Código Tipo Caso:");

        jLabel3.setText("Fecha de Inicio:");

        jDatePicker1.setEnabled(false);
        jDatePicker1.setShowYearButtons(true);
        jDatePicker1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDatePicker1ActionPerformed(evt);
            }
        });

        nomTCTextField.setEditable(false);
        nomTCTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomTCTextFieldActionPerformed(evt);
            }
        });

        jLabel4.setText("Nombre Tipo Caso:");

        codTCTextField.setEditable(false);
        codTCTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codTCTextFieldActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Datos de la Configuración a dar de baja");

        TablaTITC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Orden", "Código Tipo Instancia", "Nombre Tipo Instancia", "Minutos Máxima Resolucion"
            }
        ));
        jScrollPane1.setViewportView(TablaTITC);
        if (TablaTITC.getColumnModel().getColumnCount() > 0) {
            TablaTITC.getColumnModel().getColumn(1).setResizable(false);
            TablaTITC.getColumnModel().getColumn(1).setHeaderValue("Código Tipo Instancia");
            TablaTITC.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Datos de los Tipo Caso Tipo Instancia existentes");

        modificarTCTI.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        modificarTCTI.setText("Dar de baja esta Configuración");
        modificarTCTI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarTCTIActionPerformed(evt);
            }
        });

        backButton.setText("Volver");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(modificarTCTI)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(backButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel3)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(nroConfigTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(codTCTextField)
                                    .addComponent(nomTCTextField)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel8))
                                .addGap(0, 460, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(codTCTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(nroConfigTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(nomTCTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4))
                            .addComponent(jDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modificarTCTI)
                    .addComponent(backButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void nroConfigTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nroConfigTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nroConfigTextFieldActionPerformed

    private void nomTCTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomTCTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomTCTextFieldActionPerformed

    private void codTCTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codTCTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codTCTextFieldActionPerformed

    private void jDatePicker1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDatePicker1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jDatePicker1ActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        setVisible(false);
        dispose(); 
    }//GEN-LAST:event_backButtonActionPerformed

    private void modificarTCTIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarTCTIActionPerformed
        SimpleDateFormat formatter;
        Locale locale = jDatePicker1.getLocale();
        formatter = new SimpleDateFormat("dd/MM/yyyy", locale);
        try {
          fechainicioconfig = formatter.parse(jDatePicker1.getFormattedTextField().getText());
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Elija una fecha válida para la configuración", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
          Integer a = Integer.parseInt(nroConfigTextField.getText());
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ingrese un entero mayor a 0 para el numero de configuración", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Boolean exito = cont.darBajaConfiguracion(parnroConfiguracion, parcodTC);
        if (exito == true) {
            setVisible(false);
            dispose();
            config.setVisible(true);
        } 
    }//GEN-LAST:event_modificarTCTIActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BajaConfigurar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BajaConfigurar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BajaConfigurar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BajaConfigurar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BajaConfigurar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaTITC;
    private javax.swing.JButton backButton;
    private javax.swing.JTextField codTCTextField;
    private org.jdatepicker.JDatePicker jDatePicker1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton modificarTCTI;
    private javax.swing.JTextField nomTCTextField;
    private javax.swing.JTextField nroConfigTextField;
    // End of variables declaration//GEN-END:variables
}
